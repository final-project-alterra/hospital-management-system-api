// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	patients "github.com/final-project-alterra/hospital-management-system-api/features/patients"
	mock "github.com/stretchr/testify/mock"
)

// IBusiness is an autogenerated mock type for the IBusiness type
type IBusiness struct {
	mock.Mock
}

// CreatePatient provides a mock function with given fields: patient
func (_m *IBusiness) CreatePatient(patient patients.PatientCore) error {
	ret := _m.Called(patient)

	var r0 error
	if rf, ok := ret.Get(0).(func(patients.PatientCore) error); ok {
		r0 = rf(patient)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// EditPatient provides a mock function with given fields: patient
func (_m *IBusiness) EditPatient(patient patients.PatientCore) error {
	ret := _m.Called(patient)

	var r0 error
	if rf, ok := ret.Get(0).(func(patients.PatientCore) error); ok {
		r0 = rf(patient)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindPatientById provides a mock function with given fields: id
func (_m *IBusiness) FindPatientById(id int) (patients.PatientCore, error) {
	ret := _m.Called(id)

	var r0 patients.PatientCore
	if rf, ok := ret.Get(0).(func(int) patients.PatientCore); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(patients.PatientCore)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindPatients provides a mock function with given fields:
func (_m *IBusiness) FindPatients() ([]patients.PatientCore, error) {
	ret := _m.Called()

	var r0 []patients.PatientCore
	if rf, ok := ret.Get(0).(func() []patients.PatientCore); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]patients.PatientCore)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindPatientsByIds provides a mock function with given fields: ids
func (_m *IBusiness) FindPatientsByIds(ids []int) ([]patients.PatientCore, error) {
	ret := _m.Called(ids)

	var r0 []patients.PatientCore
	if rf, ok := ret.Get(0).(func([]int) []patients.PatientCore); ok {
		r0 = rf(ids)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]patients.PatientCore)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]int) error); ok {
		r1 = rf(ids)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemovePatientById provides a mock function with given fields: id, updatedBy
func (_m *IBusiness) RemovePatientById(id int, updatedBy int) error {
	ret := _m.Called(id, updatedBy)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, int) error); ok {
		r0 = rf(id, updatedBy)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
